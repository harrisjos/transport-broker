# Cloud Build configuration for transport-broker application
# Builds and deploys both frontend and backend to Cloud Run

steps:
  # Install root dependencies
  - name: "node:18"
    entrypoint: "npm"
    args: ["install"]
    id: "install-root-deps"

  # Install frontend dependencies
  - name: "node:18"
    entrypoint: "npm"
    args: ["install"]
    dir: "app"
    id: "install-app-deps"
    waitFor: ["-"]

  # Install backend dependencies
  - name: "node:18"
    entrypoint: "npm"
    args: ["install"]
    dir: "api"
    id: "install-api-deps"
    waitFor: ["-"]

  # Run backend tests
  - name: "node:18"
    entrypoint: "npm"
    args: ["test"]
    dir: "api"
    id: "test-api"
    waitFor: ["install-api-deps"]

  # Build frontend
  - name: "node:18"
    entrypoint: "npm"
    args: ["run", "build"]
    dir: "app"
    id: "build-app"
    waitFor: ["install-app-deps"]
    env:
      - "NEXT_PUBLIC_API_URL=https://api-${_SERVICE_SUFFIX}-${PROJECT_ID}.${_REGION}.run.app"
      - "NEXT_PUBLIC_FIREBASE_API_KEY=${_FIREBASE_API_KEY}"
      - "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}"
      - "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}"

  # Build and push API Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-api:${SHORT_SHA}"
      - "-t"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-api:latest"
      - "./api"
    id: "build-api-image"
    waitFor: ["test-api"]

  # Build and push Frontend Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-app:${SHORT_SHA}"
      - "-t"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-app:latest"
      - "./app"
    id: "build-app-image"
    waitFor: ["build-app"]

  # Push API image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-api:${SHORT_SHA}"
    id: "push-api-image"
    waitFor: ["build-api-image"]

  # Push Frontend image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-app:${SHORT_SHA}"
    id: "push-app-image"
    waitFor: ["build-app-image"]

  # Deploy API to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "transport-broker-api-${_SERVICE_SUFFIX}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-api:${SHORT_SHA}"
      - "--region"
      - "${_REGION}"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--memory"
      - "1Gi"
      - "--cpu"
      - "1"
      - "--min-instances"
      - "0"
      - "--max-instances"
      - "10"
      - "--set-env-vars"
      - "NODE_ENV=production,DB_HOST=${_DB_HOST},DB_NAME=${_DB_NAME},DB_USER=${_DB_USER},FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}"
      - "--set-secrets"
      - "DB_PASSWORD=${_DB_PASSWORD_SECRET}:latest,JWT_SECRET=${_JWT_SECRET}:latest,FIREBASE_CLIENT_EMAIL=${_FIREBASE_CLIENT_EMAIL_SECRET}:latest,FIREBASE_PRIVATE_KEY=${_FIREBASE_PRIVATE_KEY_SECRET}:latest"
    id: "deploy-api"
    waitFor: ["push-api-image"]

  # Deploy Frontend to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "transport-broker-app-${_SERVICE_SUFFIX}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/transport-broker-app:${SHORT_SHA}"
      - "--region"
      - "${_REGION}"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--memory"
      - "1Gi"
      - "--cpu"
      - "1"
      - "--min-instances"
      - "0"
      - "--max-instances"
      - "10"
    id: "deploy-app"
    waitFor: ["push-app-image", "deploy-api"]

  # Run database migrations
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "jobs"
      - "execute"
      - "transport-broker-migrate-${_SERVICE_SUFFIX}"
      - "--region"
      - "${_REGION}"
      - "--wait"
    id: "run-migrations"
    waitFor: ["deploy-api"]

# Substitution variables
substitutions:
  _REGION: us-central1
  _REPOSITORY: transport-broker
  _SERVICE_SUFFIX: dev
  _DB_HOST: 10.0.0.3
  _DB_NAME: transport_broker
  _DB_USER: postgres
  _DB_PASSWORD_SECRET: db-password
  _JWT_SECRET: jwt-secret
  _FIREBASE_PROJECT_ID: your-firebase-project
  _FIREBASE_API_KEY: your-firebase-api-key
  _FIREBASE_AUTH_DOMAIN: your-project.firebaseapp.com
  _FIREBASE_CLIENT_EMAIL_SECRET: firebase-client-email
  _FIREBASE_PRIVATE_KEY_SECRET: firebase-private-key

# Options
options:
  machineType: "E2_HIGHCPU_8"
  diskSizeGb: "100"
  logging: CLOUD_LOGGING_ONLY

# Timeout
timeout: "1200s"
