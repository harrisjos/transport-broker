# Docker Compose for local development

services:
  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_PATH: /app/data/transport_broker.db
      JWT_SECRET: dev-jwt-secret-change-in-production
      HOST: 0.0.0.0
      FRONTEND_URL: http://localhost:3000
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
    depends_on:
      redis:
        condition: service_started
    volumes:
      - ./api:/app
      - /app/node_modules
      - api_data:/app/data
    command: node startup.js

  # Frontend App
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: deps
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      INTERNAL_API_URL: http://api:3001
      NEXT_PUBLIC_FIREBASE_API_KEY: ${NEXT_PUBLIC_FIREBASE_API_KEY}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
    depends_on:
      - api
    volumes:
      - .:/workspace
      - /workspace/node_modules
      - /workspace/app/.next
    working_dir: /workspace/app
    command: npm run dev

volumes:
  redis_data:
  api_data:
